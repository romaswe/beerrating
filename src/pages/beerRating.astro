---
import type { APIResponse, BeerObj } from "../interfaces/types";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";

const title = "Beer rating";
const description = "Page about beer";

const spreadsheetId = import.meta.env.SPREADSHEET_ID;
const range = import.meta.env.RANGE;
const apiKey = import.meta.env.GOOGLE_SHEETS_API_KEY;

const url = `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${range}?key=${apiKey}`;

let data: string[][] = []; // Type data as a 2D array of strings
let error: string | null = null;

let styleMap: Map<string, number> = new Map();
let topBeerMap: Map<string, BeerObj> = new Map();

try {
  const response = await fetch(url);

  if (!response.ok) {
    throw new Error(`Error: ${response.status} ${response.statusText}`);
  }

  const result: APIResponse = await response.json();

  if (!result.values || result.values.length === 0) {
    throw new Error("Error: No data found in the Google Sheet.");
  }

  // Filter out rows where the first cell is empty
  data = result.values.filter((row) => row[0].trim() !== "");
  await getStats(data);
} catch (err) {
  error = (err as Error).message;
  console.error("Failed to fetch data:", err);
}

async function getStats(data: string[][]) {
  var dataIndex = 0;
  data.forEach((row) => {
    // We are skipping the first row becasue its the headers
    if (dataIndex >= 1) {
      const style = row[1];
      // Create a map with the number of beers of each style
      styleMap.set(style, (styleMap.get(style) ?? 0) + 1);

      // get the top (average) rated beer of each style
      const roundedRating = Math.round(Number(row[6]) * 100) / 100;
      const beerObj: BeerObj = {
        name: row[0],
        rating: roundedRating,
        style: style,
      };
      const compareRating =
        Math.round((topBeerMap.get(style)?.rating ?? 0) * 100) / 100;
      if (compareRating <= beerObj.rating) {
        topBeerMap.set(style, beerObj);
      }
    }
    dataIndex++;
  });
  styleMap = new Map([...styleMap.entries()].sort((a, b) => b[1] - a[1]));
  console.log(styleMap);
  console.log(topBeerMap);
}
---

<html lang="se">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .stats {
        display: flex;
        flex-direction: row;
      }
      .statsdata {
        margin: auto;
      }
      a.buttonSystembolaget {
        padding: 1px 6px;
        border: 1px outset buttonborder;
        border-radius: 3px;
        color: #ffe32a;
        background-color: #1a6a54;
        text-decoration: none;
        margin: 1px;
      }
      a.buttonUntappd {
        padding: 1px 6px;
        border: 1px outset buttonborder;
        border-radius: 3px;
        color: black;
        background-color: #ffc000;
        text-decoration: none;
        margin: 1px;
      }
    </style>
  </head>
  <body>
    <Header />
    <h1>Beer Ratings</h1>
    <div class="stats">
      <div class="statsdata">
        {
          Array.from(styleMap).map((mapArray) => (
            <p>
              Style: "{mapArray[0]}" Count: {mapArray[1]}
            </p>
          ))
        }
      </div>
      <div class="statsdata">
        {
          Array.from(topBeerMap).map((mapArray) => (
            <p>
              Style: "{mapArray[0]}" Name: "{mapArray[1].name}" Rating:{" "}
              {mapArray[1].rating}
            </p>
          ))
        }
      </div>
    </div>

    {
      error ? (
        <p style="color: red;">{error}</p>
      ) : (
        <table border="1">
          <thead>
            <tr>
              {data[0].map((header) => (
                <th>{header}</th>
              ))}
            </tr>
          </thead>
          <tbody>
            {data.slice(1).map((row) => (
              <tr>
                <td>
                  <span>{row[0]}</span>
                  <div>
                    <a
                      href={`https://www.systembolaget.se/sortiment/?q=${encodeURIComponent(row[0])}`}
                      class="buttonSystembolaget"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      Systembolaget
                    </a>
                    <a
                      href={`https://untappd.com/search?q=${encodeURIComponent(row[0])}`}
                      class="buttonUntappd"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      Untappd
                    </a>
                  </div>
                </td>
                {row.slice(1).map((cell) => (
                  <td>{cell || ""}</td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      )
    }
  </body>
</html>
